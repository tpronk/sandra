% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/calculateScores.R
\name{calculateDScores}
\alias{calculateDScores}
\title{Calculates d-scores from trial data}
\usage{
calculateDScores(ds, settings, splithalves = 0, what = "all", verbose = F,
  ...)
}
\arguments{
\item{ds}{(data.frame) Trial data.}

\item{settings}{(list) D-score calculation settings.}

\item{splithalves}{(integer) If 0, return a single set of d-scores, if > 0, return randomized split-halve reliability averaged over splithalves iterations.}

\item{what}{(character) If "all", calculate over full task data, if "first_second" calculate 2 dscores; one for first and one for second halve. Only used if splithalves == 0.}

\item{verbose}{(logical) If TRUE, then print debug output.}

\item{...}{Remaining arguments are passed to an internal scoring function. Not used at the moment.}
}
\value{
(data.frame) Calculated d-scores.
}
\description{
Calculates d-scores from trial data
}
\details{
The table below shows an overview of elements in settings and their meaning.
\tabular{lllll}{
  \strong{Name} \tab \strong{Type} \tab \strong{Required?} \tab  \strong{Example Value} \tab \strong{Description} \cr
  comp_var \tab character \tab Yes \tab \code{"appr"} \tab Variable in trialdata that identifies compatible/incompatible blocks. \cr
  comp_levels \tab character \tab Yes \tab \code{c( "yes", "no" )} \tab Vector containing two elements, corresponding to the values of comp_var that identify compatible and incompatible blocks respectively. Bias score is calculated towards first element. \cr
  resp_correct \tab character \tab Yes \tab \code{1} \tab Value for correct responses. \cr
  resp_penalty \tab vector \tab No \tab \code{c(2)} \tab Responses whose response times are to be replaced by a penalty RT. \cr
  rt_penalty \tab character \tab No \tab \code{"2sd"} \tab Default = "2sd". Use "2sd" to replace RTs of incorrect responses with the mean + 2SD of correct responses for current block. Use "d600" to penalize with mean + 600. \cr
  aux_report \tab vector \tab No \tab \code{c( "correct_n", "task_n" )} \tab Additional variables to report. See separate section covering aux_report. \cr
}

The table below shows an overview of elements in aux_report and their meaning.
\tabular{lllll}{
  \strong{Name} \tab \strong{Scope} \tab \strong{Description} \tab \cr
  correct_n \tab block \tab Number of correct responses \cr
  correct_mean \tab block \tab Mean or RT of correct responses \cr
  correct_sd \tab block \tab SD of RT of correct responses \cr
  penalty \tab block \tab RT penalty \cr
  adjusted_mean \tab block \tab Mean RT after applying penalty \cr
  inclusive_sd \tab task \tab SD of response times for compatible and incompatible blocks taken together \cr
  task_n \tab task \tab Number of trials in task \cr
}
}
\examples{
See: SANDRA/framework_demos/scripts/0.t.2 Calculate Scores.R
}
\seealso{
\code{\link[sandra]{dropAndReport}} for additional settings that can be used for 
dropping and reporting responses and response times before scores are calculated.

Other SANDRA: \code{\link{EasyFit}}, \code{\link{FileIO}},
  \code{\link{FrameworkFileIO}},
  \code{\link{ProgressTimer}}, \code{\link{addPostfix}},
  \code{\link{appendData}},
  \code{\link{calculateAggregation}},
  \code{\link{calculateScores}},
  \code{\link{cutExtension}},
  \code{\link{data.frame.affixNames}},
  \code{\link{data.frame.dropVar}},
  \code{\link{data.frame.new}},
  \code{\link{data.frame.renameVar}},
  \code{\link{decodeJasmin1}}, \code{\link{done}},
  \code{\link{dropAndReport}}, \code{\link{existsData}},
  \code{\link{getExtension}},
  \code{\link{installAnalysisFramework}},
  \code{\link{leftMerge}}, \code{\link{makeWide}},
  \code{\link{niceBy}}, \code{\link{niceMerge}},
  \code{\link{path}}, \code{\link{readData}},
  \code{\link{readSurveyTool}}, \code{\link{readVector}},
  \code{\link{reportProgress}}, \code{\link{resolvePath}},
  \code{\link{runScript}}, \code{\link{timeRemaining}},
  \code{\link{writeData}}, \code{\link{writeVector}}
}

